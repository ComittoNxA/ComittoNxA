apply plugin: 'com.android.application'
def applicationName = "ComittoNxA"
def versionMajor = 1
def versionMinor = 65
//def versionPatch = 0
def revision = "a"

android {
    compileSdkVersion 19
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "jp.dip.muracoro.comittona"
        minSdkVersion 8
        targetSdkVersion 8
        versionCode versionMajor * 100 + versionMinor
        versionName "${versionMajor}.${versionMinor}${revision}"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name != "release") {
            return
        }
        variant.outputs.all {
            outputFileName = "${applicationName}_${versionName}.apk"  // ←ココ
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
    productFlavors {
    }
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

dependencies {
//    implementation 'com.android.support:support-compat:24.2.1'
//    implementation 'com.android.support:appcompat-v7:24.2.1'
    implementation 'com.caverock:androidsvg-aar:1.4'
    api files('libs/jcifs-1.3.17.jar')
//    api files('libs/svgandroid.jar')
}